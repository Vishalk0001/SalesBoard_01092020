@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor session
@model IEnumerable<SalesBoard.Models.Items>
@{
    ViewData["Title"] = "For Sale";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@if (string.IsNullOrEmpty(session.HttpContext.Session.GetString("IsMyItem")) || (session.HttpContext.Session.GetString("IsMyItem") != "YES"))
{
    <h2>All Items</h2>
}
else
{
    <h2>My Items</h2>
}
<p>
    @*@if (!string.IsNullOrEmpty(session.HttpContext.Session.GetString("isAdmin")) && (session.HttpContext.Session.GetString("isAdmin").ToUpper() == "ADMIN"))
        {*@
    <a asp-action="Create">Create New</a>
    @* }*@

</p>

@if (string.IsNullOrEmpty(session.HttpContext.Session.GetString("IsMyItem")) || (session.HttpContext.Session.GetString("IsMyItem") != "YES"))
{
    <form asp-controller="Items" asp-action="Index">
        <p>
            Search: <input type="text" name="SearchString">
            <input type="submit" value="Filter" placeholder="Item Name" />
        </p>
    </form>
}

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Quantity)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Quantity)
                </td>
                <td>
                    <a asp-action="Details" asp-route-id="@item.Id">View Item</a>
                    @if (!string.IsNullOrEmpty(session.HttpContext.Session.GetString("IsMyItem")) && (session.HttpContext.Session.GetString("IsMyItem") == "YES"))
                    {
                        <span> |</span> <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> <span> |</span>
                        <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                    }


                    @if (!string.IsNullOrEmpty(session.HttpContext.Session.GetString("Seller")) && (session.HttpContext.Session.GetString("Seller").ToLower() != item.Seller.ToLower()))
                    {
                        <span>| </span><a asp-action="Purchase" asp-route-id="@item.Id">Purchase</a>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>
@if (!string.IsNullOrEmpty(session.HttpContext.Session.GetString("IsMyItem")) && (session.HttpContext.Session.GetString("IsMyItem") == "YES"))
{
    <a asp-controller="Sales" asp-action="Index">View All Sales</a>
}

